{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The book on Geomapping with Echarts This book aims to share with the reader: How to create a new map How to edit an existing map so that the map is suitable for echarts and pyecharts The approach is to collect the techincal notes about different resolutions to various issues of echarts-map organisation.","title":"HOME"},{"location":"#the-book-on-geomapping-with-echarts","text":"This book aims to share with the reader: How to create a new map How to edit an existing map so that the map is suitable for echarts and pyecharts The approach is to collect the techincal notes about different resolutions to various issues of echarts-map organisation.","title":"The book on Geomapping with Echarts"},{"location":"geojson-sources/","text":"A list of geojson data sources Natural Earth Data : It is a default geojson data sources. When you need some geo-shapes, you could find one from them. It provides two levels of geo-shapes: country boundaries, and countries with internal borders at state or province level. But if you are seeking district level, you had better turn to individual country government's open data initiative.","title":"Geojsons"},{"location":"geojson-sources/#a-list-of-geojson-data-sources","text":"Natural Earth Data : It is a default geojson data sources. When you need some geo-shapes, you could find one from them. It provides two levels of geo-shapes: country boundaries, and countries with internal borders at state or province level. But if you are seeking district level, you had better turn to individual country government's open data initiative.","title":"A list of geojson data sources"},{"location":"howtos/add-ji-zhou-qu-to-tianjin/","text":"Create new geo shape and append it Take Tianjin city as an example. Jizhou district was merged into Tianjin city in June, 2016. Hence, echarts-maps needs to update Tianjin map. Tutorial Please download Tianjin map and save as: tianjin.geojson Open geojson.io in your browser. Drag and drop tianjin.geojson into it: Draw Jizhou district using Polygon tool: Please remember that to close the polygon, you need to click the first point After the polygon is complete, the helping shapes disappears but the polygon. Please save the right hand side geojson as\uff1ajizhouqu.geojson It is time to use echarts-mapmaker. $ npm install -g echarts-mapmaker $ merge tianjin.geojson jizhouqu.geojson $ ls merged_tianjin.geojson merged_tianjin.geojson is then the final geojson Make a js file This needs echarts-mapmaker . $ makejs tianjin.geojson tianjin.js \u5929\u6d25 Please note that the last name is a map registry name so you will need to use the same name inside echarts.","title":"Create new geo shape and append it"},{"location":"howtos/add-ji-zhou-qu-to-tianjin/#create-new-geo-shape-and-append-it","text":"Take Tianjin city as an example. Jizhou district was merged into Tianjin city in June, 2016. Hence, echarts-maps needs to update Tianjin map.","title":"Create new geo shape and append it"},{"location":"howtos/add-ji-zhou-qu-to-tianjin/#tutorial","text":"Please download Tianjin map and save as: tianjin.geojson Open geojson.io in your browser. Drag and drop tianjin.geojson into it: Draw Jizhou district using Polygon tool: Please remember that to close the polygon, you need to click the first point After the polygon is complete, the helping shapes disappears but the polygon. Please save the right hand side geojson as\uff1ajizhouqu.geojson It is time to use echarts-mapmaker. $ npm install -g echarts-mapmaker $ merge tianjin.geojson jizhouqu.geojson $ ls merged_tianjin.geojson merged_tianjin.geojson is then the final geojson","title":"Tutorial"},{"location":"howtos/add-ji-zhou-qu-to-tianjin/#make-a-js-file","text":"This needs echarts-mapmaker . $ makejs tianjin.geojson tianjin.js \u5929\u6d25 Please note that the last name is a map registry name so you will need to use the same name inside echarts.","title":"Make a js file"},{"location":"howtos/dissolve-internal-borders/","text":"Make a contour of Beijing city map Now, let's have a hands-on session to transform Beijing city map with internal borders into a contour of Beijing\uff1a Please install: node.js. And I recommend that everyone use nvm , the advantage is switching between node.js versions could not be easier. Install mapshaper\uff0cecharts-mapmaker npm install -g mapshaper echarts-mapmaker Download Beijing city map with internal borders Use mapshaper mapshaper beijing.geojson -dissolve2 -o beijing-shape-only.geojson Open beijing-shape-only.geojson in geojson.io.","title":"Make a contour of Beijing"},{"location":"howtos/dissolve-internal-borders/#make-a-contour-of-beijing-city-map","text":"Now, let's have a hands-on session to transform Beijing city map with internal borders into a contour of Beijing\uff1a Please install: node.js. And I recommend that everyone use nvm , the advantage is switching between node.js versions could not be easier. Install mapshaper\uff0cecharts-mapmaker npm install -g mapshaper echarts-mapmaker Download Beijing city map with internal borders Use mapshaper mapshaper beijing.geojson -dissolve2 -o beijing-shape-only.geojson Open beijing-shape-only.geojson in geojson.io.","title":"Make a contour of Beijing city map"},{"location":"howtos/split-and-merge/","text":"Make northern China map Introduction Do you want to know how seven regions of China is authored? This section will reveal the techinical details. It is not that difficult at all. Theory All we need is echarts-mapmaker and echarts' map resource. echarts:map/json/china.json provides a China map with individual provinces and regions. In this section, we are going to learn how we separate the features, and stiches the chosen shapes together. Tutorial git clone https://github.com/apache/incubator-echarts\u3002Please do not download the actual file. copy incubator-echarts/map/json/china.json to your current working directory use echarts-mapmaker' split command to split china.json , so as to get individual provinces and regions. $ split china.json $ ls china.json \u5409\u6797.geojson \u5c71\u4e1c.geojson \u6c5f\u82cf.geojson \u6d77\u5357.geojson \u798f\u5efa.geojson \u9655\u897f.geojson \u4e0a\u6d77.geojson \u56db\u5ddd.geojson \u5c71\u897f.geojson \u6c5f\u897f.geojson \u6e56\u5317.geojson \u897f\u85cf.geojson \u9752\u6d77.geojson \u4e91\u5357.geojson \u5929\u6d25.geojson \u5e7f\u4e1c.geojson \u6cb3\u5317.geojson \u6e56\u5357.geojson \u8d35\u5dde.geojson \u9999\u6e2f.geojson \u5317\u4eac.geojson \u5b81\u590f.geojson \u5e7f\u897f.geojson \u6cb3\u5357.geojson \u6fb3\u95e8.geojson \u8fbd\u5b81.geojson \u5185\u8499\u53e4.geojson \u53f0\u6e7e.geojson \u5b89\u5fbd.geojson \u65b0\u7586.geojson \u6d59\u6c5f.geojson \u7518\u8083.geojson \u91cd\u5e86.geojson \u9ed1\u9f99\u6c5f.geojson Voila, it is done! Merge! What the provinces for northen China: Hebei, Inner Mongolia, Shanxi, Beijing and Tianjin. $ merge \u6cb3\u5317.geojson \u5185\u8499\u53e4.geojson $ merge merged_\u6cb3\u5317.geojson \u5c71\u897f.geojson $ merge merged_merged_\u6cb3\u5317.geojson \u5317\u4eac.geojson $ merge merged_merged_merged_\u6cb3\u5317.geojson \u5929\u6d25.geojson $ mv merged_merged_merged_merged_\u6cb3\u5317.geojson \u534e\u5317.geojson \u600e\u4e48\u4f1a\u6709\u8fd9\u4e48\u591a 'merged_' \uff1f merge \u5de5\u5177\u81ea\u52a8\u52a0\u4e00\u4e2a\u524d\u7f00\uff0c\u8fd0\u884c\u591a\u6b21\uff0c\u5c31\u6709\u8fd9\u4e48\u591a\u4e86\u3002\u6709\u6539\u8fdb\u610f\u89c1\u7684\u8bdd\uff0c\u53ef\u4ee5\u544a\u8bc9\u6211\u3002 Let's preview our map. Please note the merged map has been UTF8 encoded. In order to use geojson.io to preview it, we need to decode it first decode \u534e\u5317.geojson huabei.geojson Then drag and drop it into geojson.io : Make a contour Please remember that we need to decode the merged geojson file. mapshaper could help us in getting rid of its borders: mapshaper huabei.geojson -dissolve2 -o huabei-shape-only.geojson 1. Let's view the result Home work Take this reference , make a js version. Make a central China map Make a China map with seven regions.","title":"Make northern China map"},{"location":"howtos/split-and-merge/#make-northern-china-map","text":"","title":"Make northern China map"},{"location":"howtos/split-and-merge/#introduction","text":"Do you want to know how seven regions of China is authored? This section will reveal the techinical details. It is not that difficult at all.","title":"Introduction"},{"location":"howtos/split-and-merge/#theory","text":"All we need is echarts-mapmaker and echarts' map resource. echarts:map/json/china.json provides a China map with individual provinces and regions. In this section, we are going to learn how we separate the features, and stiches the chosen shapes together.","title":"Theory"},{"location":"howtos/split-and-merge/#tutorial","text":"git clone https://github.com/apache/incubator-echarts\u3002Please do not download the actual file. copy incubator-echarts/map/json/china.json to your current working directory use echarts-mapmaker' split command to split china.json , so as to get individual provinces and regions. $ split china.json $ ls china.json \u5409\u6797.geojson \u5c71\u4e1c.geojson \u6c5f\u82cf.geojson \u6d77\u5357.geojson \u798f\u5efa.geojson \u9655\u897f.geojson \u4e0a\u6d77.geojson \u56db\u5ddd.geojson \u5c71\u897f.geojson \u6c5f\u897f.geojson \u6e56\u5317.geojson \u897f\u85cf.geojson \u9752\u6d77.geojson \u4e91\u5357.geojson \u5929\u6d25.geojson \u5e7f\u4e1c.geojson \u6cb3\u5317.geojson \u6e56\u5357.geojson \u8d35\u5dde.geojson \u9999\u6e2f.geojson \u5317\u4eac.geojson \u5b81\u590f.geojson \u5e7f\u897f.geojson \u6cb3\u5357.geojson \u6fb3\u95e8.geojson \u8fbd\u5b81.geojson \u5185\u8499\u53e4.geojson \u53f0\u6e7e.geojson \u5b89\u5fbd.geojson \u65b0\u7586.geojson \u6d59\u6c5f.geojson \u7518\u8083.geojson \u91cd\u5e86.geojson \u9ed1\u9f99\u6c5f.geojson Voila, it is done! Merge! What the provinces for northen China: Hebei, Inner Mongolia, Shanxi, Beijing and Tianjin. $ merge \u6cb3\u5317.geojson \u5185\u8499\u53e4.geojson $ merge merged_\u6cb3\u5317.geojson \u5c71\u897f.geojson $ merge merged_merged_\u6cb3\u5317.geojson \u5317\u4eac.geojson $ merge merged_merged_merged_\u6cb3\u5317.geojson \u5929\u6d25.geojson $ mv merged_merged_merged_merged_\u6cb3\u5317.geojson \u534e\u5317.geojson \u600e\u4e48\u4f1a\u6709\u8fd9\u4e48\u591a 'merged_' \uff1f merge \u5de5\u5177\u81ea\u52a8\u52a0\u4e00\u4e2a\u524d\u7f00\uff0c\u8fd0\u884c\u591a\u6b21\uff0c\u5c31\u6709\u8fd9\u4e48\u591a\u4e86\u3002\u6709\u6539\u8fdb\u610f\u89c1\u7684\u8bdd\uff0c\u53ef\u4ee5\u544a\u8bc9\u6211\u3002 Let's preview our map. Please note the merged map has been UTF8 encoded. In order to use geojson.io to preview it, we need to decode it first decode \u534e\u5317.geojson huabei.geojson Then drag and drop it into geojson.io :","title":"Tutorial"},{"location":"howtos/split-and-merge/#make-a-contour","text":"Please remember that we need to decode the merged geojson file. mapshaper could help us in getting rid of its borders: mapshaper huabei.geojson -dissolve2 -o huabei-shape-only.geojson 1. Let's view the result","title":"Make a contour"},{"location":"howtos/split-and-merge/#home-work","text":"Take this reference , make a js version. Make a central China map Make a China map with seven regions.","title":"Home work"},{"location":"howtos/split-geojson/","text":"Where do the county maps come from? Simply, they are splited from city maps . Take Bejing as an example, its own map could be splitted into the following independent shapes: Theory geojson is a json file and can be edited by any json editor. Let drop Beijing geojson file into json editor online . You will find that it consists of 16 geojson features. The first one is called \u201c\u4e1c\u57ce\u533a\u201d If you have node, we can have a programmatic inspection: One step operation Now let use echarts-mapmaker's split: $ split geojson/shape-with-internal-borders/beijing.json $ ls \u4e1c\u57ce\u533a.geojson \u6000\u67d4\u533a.geojson \u901a\u5dde\u533a.geojson \u4e30\u53f0\u533a.geojson \u623f\u5c71\u533a.geojson \u987a\u4e49\u533a.geojson \u5927\u5174\u533a.geojson \u660c\u5e73\u533a.geojson \u77f3\u666f\u5c71\u533a.geojson \u5bc6\u4e91\u533a.geojson \u671d\u9633\u533a.geojson \u95e8\u5934\u6c9f\u533a.geojson \u5e73\u8c37\u533a.geojson \u6d77\u6dc0\u533a.geojson \u5ef6\u5e86\u533a.geojson \u897f\u57ce\u533a.geojson Conclusion 2882 counties, islands and districts were done in this way.","title":"Where do the county maps come from?"},{"location":"howtos/split-geojson/#where-do-the-county-maps-come-from","text":"Simply, they are splited from city maps . Take Bejing as an example, its own map could be splitted into the following independent shapes:","title":"Where do the county maps come from?"},{"location":"howtos/split-geojson/#theory","text":"geojson is a json file and can be edited by any json editor. Let drop Beijing geojson file into json editor online . You will find that it consists of 16 geojson features. The first one is called \u201c\u4e1c\u57ce\u533a\u201d If you have node, we can have a programmatic inspection:","title":"Theory"},{"location":"howtos/split-geojson/#one-step-operation","text":"Now let use echarts-mapmaker's split: $ split geojson/shape-with-internal-borders/beijing.json $ ls \u4e1c\u57ce\u533a.geojson \u6000\u67d4\u533a.geojson \u901a\u5dde\u533a.geojson \u4e30\u53f0\u533a.geojson \u623f\u5c71\u533a.geojson \u987a\u4e49\u533a.geojson \u5927\u5174\u533a.geojson \u660c\u5e73\u533a.geojson \u77f3\u666f\u5c71\u533a.geojson \u5bc6\u4e91\u533a.geojson \u671d\u9633\u533a.geojson \u95e8\u5934\u6c9f\u533a.geojson \u5e73\u8c37\u533a.geojson \u6d77\u6dc0\u533a.geojson \u5ef6\u5e86\u533a.geojson \u897f\u57ce\u533a.geojson","title":"One step operation"},{"location":"howtos/split-geojson/#conclusion","text":"2882 counties, islands and districts were done in this way.","title":"Conclusion"},{"location":"howtos/switzerland/","text":"Source Switzerland from natural earth data How to source Switzerland from natural earth data? Before we start, please get GDAL installed Download \u56fe\u5305 . On this page \uff0cChoose \u201cAdmin 1 - States, Provinces\u201c \u3002 Why? Admin 1 shows internal borders of each state or province. You can choose \"Admin 0 - Boundary lines\" Unzip it. Now please use og2ogr to get switzerland geojson out: ogr2ogr -f GeoJSON -where \"ADM0_A3 in ('CHE')\" switzerland.geojson ne_10m_admin_1_states_provinces.shp Now we can open it inside geojson.io: To get Switzerland displayed using echarts, what are the additional steps? natural earth data provides quote a few localized place names. But so far, only one language is supported. { \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"scalerank\": 9, \"adm1_code\": \"CHE-168\", \"diss_me\": 168, \"iso_3166_2\": \"CH-TI\", \"wikipedia\": null, \"iso_a2\": \"CH\", \"adm0_sr\": 1, \"name\": \"Ticino\", \"name_alt\": \"Tesino|Tessin\", \"name_local\": null, \"type\": \"Canton|Kanton|Chantun\", \"type_en\": \"Canton\", \"code_local\": null, \"code_hasc\": \"CH.TI\" , \"note\": null, \"hasc_maybe\": null, \"region\": null, \"region_cod\": null, \"provnum_ne\": 15, \"gadm_level\": 1, \"check_me\": 20, \"datarank\": 7, \"abbrev\": null, \"postal\": \"TI\", \"area_sqkm\" : 0, \"sameascity\": -99, \"labelrank\": 9, \"name_len\": 6, \"mapcolor9\": 7, \"mapcolor13\": 3, \"fips\": \"SZ20\", \"fips_alt\": null, \"woe_id\": 2347102, \"woe_label\": \"Canton of Ticino, CH, Swit zerland\", \"woe_name\": \"Ticino\", \"latitude\": 46.3604, \"longitude\": 8.79019, \"sov_a3\": \"CHE\", \"adm0_a3\": \"CHE\", \"adm0_label\": 2, \"admin\": \"Switzerland\", \"geonunit\": \"Switzerland\", \"gu _a3\": \"CHE\", \"gn_id\": 2658370, \"gn_name\": \"Cantone Ticino\", \"gns_id\": -2554455, \"gns_name\": \"Ticino, Cantone\", \"gn_level\": 1, \"gn_region\": null, \"gn_a1_code\": \"CH.TI\", \"region_sub\": null, \"sub_code\": null, \"gns_level\": 1, \"gns_lang\": \"swa\", \"gns_adm1\": \"SZ20\", \"gns_region\": null, \"min_label\": 8.7, \"max_label\": 11.0, \"min_zoom\": 8.7, \"wikidataid\": \"Q12724\", \"name_ar\": \"\u0643\u0627\u0646\u062a\u0648\u0646 \u062a\u064a\u0633\u064a\u0646\u0648\", \"name_bn\": \"\u09a4\u09bf\u0995\u09bf\u09a8\u09cb\", \"name_de\": \"Kanton Tessin\", \"name_en\": \"Ticino\", \"name_es\": \"Tesino\", \"name_fr\": \"canton du Tessin\", \"name_el\": \"\u03a4\u03b9\u03c4\u03c3\u03af\u03bd\u03bf\", \"name_hi\": \"\u0924\u093f\u091a\u0940\u0928\u094b \u0915\u0948\u0928\u094d\u091f\u0928\", \"name_hu\": \"Ticino kanton\", \"name_id\": \"Kanton Ticino\", \"name_it\": \"canton Ticino\", \"name_ja\": \"\u30c6\u30a3\u30c1\u30fc\u30ce\u5dde\", \"name_ko\": \"\ud2f0\uce58\ub178 \uc8fc\", \"name_nl\": \"Ticino\", \"name_pl\":\"Ticino\", \"name_pt\": \"Ticino\", \"name_ru\": \"\u0422\u0438\u0447\u0438\u043d\u043e\", \"name_sv\": \"Ticino\", \"name_tr\": \"Ticino\", \"name_vi\": \"Ticino\", \"name_zh\": \"\u63d0\u5951\u8afe\u5dde\", \"ne_id\": 1159307671 }, \"geometry\": {... So you can choose a property name to be name using echarts-mapmaker' property command: property -r name_en,name switzerland.geojson Let open it again, it now has an English name: Reference Let's make a map","title":"Source Switzerland map from natural earth data"},{"location":"howtos/switzerland/#source-switzerland-from-natural-earth-data","text":"","title":"Source Switzerland from natural earth data"},{"location":"howtos/switzerland/#how-to-source-switzerland-from-natural-earth-data","text":"Before we start, please get GDAL installed Download \u56fe\u5305 . On this page \uff0cChoose \u201cAdmin 1 - States, Provinces\u201c \u3002 Why? Admin 1 shows internal borders of each state or province. You can choose \"Admin 0 - Boundary lines\" Unzip it. Now please use og2ogr to get switzerland geojson out: ogr2ogr -f GeoJSON -where \"ADM0_A3 in ('CHE')\" switzerland.geojson ne_10m_admin_1_states_provinces.shp Now we can open it inside geojson.io:","title":"How to source Switzerland from natural earth data?"},{"location":"howtos/switzerland/#to-get-switzerland-displayed-using-echarts-what-are-the-additional-steps","text":"natural earth data provides quote a few localized place names. But so far, only one language is supported. { \"type\": \"Feature\", \"properties\": { \"featurecla\": \"Admin-1 scale rank\", \"scalerank\": 9, \"adm1_code\": \"CHE-168\", \"diss_me\": 168, \"iso_3166_2\": \"CH-TI\", \"wikipedia\": null, \"iso_a2\": \"CH\", \"adm0_sr\": 1, \"name\": \"Ticino\", \"name_alt\": \"Tesino|Tessin\", \"name_local\": null, \"type\": \"Canton|Kanton|Chantun\", \"type_en\": \"Canton\", \"code_local\": null, \"code_hasc\": \"CH.TI\" , \"note\": null, \"hasc_maybe\": null, \"region\": null, \"region_cod\": null, \"provnum_ne\": 15, \"gadm_level\": 1, \"check_me\": 20, \"datarank\": 7, \"abbrev\": null, \"postal\": \"TI\", \"area_sqkm\" : 0, \"sameascity\": -99, \"labelrank\": 9, \"name_len\": 6, \"mapcolor9\": 7, \"mapcolor13\": 3, \"fips\": \"SZ20\", \"fips_alt\": null, \"woe_id\": 2347102, \"woe_label\": \"Canton of Ticino, CH, Swit zerland\", \"woe_name\": \"Ticino\", \"latitude\": 46.3604, \"longitude\": 8.79019, \"sov_a3\": \"CHE\", \"adm0_a3\": \"CHE\", \"adm0_label\": 2, \"admin\": \"Switzerland\", \"geonunit\": \"Switzerland\", \"gu _a3\": \"CHE\", \"gn_id\": 2658370, \"gn_name\": \"Cantone Ticino\", \"gns_id\": -2554455, \"gns_name\": \"Ticino, Cantone\", \"gn_level\": 1, \"gn_region\": null, \"gn_a1_code\": \"CH.TI\", \"region_sub\": null, \"sub_code\": null, \"gns_level\": 1, \"gns_lang\": \"swa\", \"gns_adm1\": \"SZ20\", \"gns_region\": null, \"min_label\": 8.7, \"max_label\": 11.0, \"min_zoom\": 8.7, \"wikidataid\": \"Q12724\", \"name_ar\": \"\u0643\u0627\u0646\u062a\u0648\u0646 \u062a\u064a\u0633\u064a\u0646\u0648\", \"name_bn\": \"\u09a4\u09bf\u0995\u09bf\u09a8\u09cb\", \"name_de\": \"Kanton Tessin\", \"name_en\": \"Ticino\", \"name_es\": \"Tesino\", \"name_fr\": \"canton du Tessin\", \"name_el\": \"\u03a4\u03b9\u03c4\u03c3\u03af\u03bd\u03bf\", \"name_hi\": \"\u0924\u093f\u091a\u0940\u0928\u094b \u0915\u0948\u0928\u094d\u091f\u0928\", \"name_hu\": \"Ticino kanton\", \"name_id\": \"Kanton Ticino\", \"name_it\": \"canton Ticino\", \"name_ja\": \"\u30c6\u30a3\u30c1\u30fc\u30ce\u5dde\", \"name_ko\": \"\ud2f0\uce58\ub178 \uc8fc\", \"name_nl\": \"Ticino\", \"name_pl\":\"Ticino\", \"name_pt\": \"Ticino\", \"name_ru\": \"\u0422\u0438\u0447\u0438\u043d\u043e\", \"name_sv\": \"Ticino\", \"name_tr\": \"Ticino\", \"name_vi\": \"Ticino\", \"name_zh\": \"\u63d0\u5951\u8afe\u5dde\", \"ne_id\": 1159307671 }, \"geometry\": {... So you can choose a property name to be name using echarts-mapmaker' property command: property -r name_en,name switzerland.geojson Let open it again, it now has an English name:","title":"To get Switzerland displayed using echarts, what are the additional steps?"},{"location":"howtos/switzerland/#reference","text":"Let's make a map","title":"Reference"},{"location":"tools/gdal/","text":"GDAL GADAL provides many GIS formatting tools. ogrogr is often used echarts map editing. Installation brew install gdal","title":"GDAL"},{"location":"tools/gdal/#gdal","text":"GADAL provides many GIS formatting tools. ogrogr is often used echarts map editing.","title":"GDAL"},{"location":"tools/gdal/#installation","text":"brew install gdal","title":"Installation"},{"location":"tools/geojson-io/","text":"How to use geojson.io to draw custom polygons Draw your first polygon: the Forbidden City in Beijing Open geojson.io in Chrome Centre the map on Beijing and zoom out Click on polygon tool and start drawing Remember to finish a polygon, you must click the first point which you started from. Highlight the text area on the right. Select all and copy (Ctrl + A, then Ctrl + C). Open a new file and paste the copied geojson content in it, save! Open geojson.io in another window\u3002Drag and drop the new file into it. You should see the Forbidden City polygon.","title":"geojson.io"},{"location":"tools/geojson-io/#how-to-use-geojsonio-to-draw-custom-polygons","text":"","title":"How to use geojson.io to draw custom polygons"},{"location":"tools/geojson-io/#draw-your-first-polygon-the-forbidden-city-in-beijing","text":"Open geojson.io in Chrome Centre the map on Beijing and zoom out Click on polygon tool and start drawing Remember to finish a polygon, you must click the first point which you started from. Highlight the text area on the right. Select all and copy (Ctrl + A, then Ctrl + C). Open a new file and paste the copied geojson content in it, save! Open geojson.io in another window\u3002Drag and drop the new file into it. You should see the Forbidden City polygon.","title":"Draw your first polygon: the Forbidden City in Beijing"},{"location":"tools/mapmaker/","text":"mapmaker Introduction echarts-mapmaker is derived from echarts-map-tool \u3002mapmaker targets at echarts map developers, whereas echarts-map-tool is web-ui for downloading custom geoshapes from Gaode map. Installation npm install -g echarts-mapmaker Feature highlights UTF encode geojson echarts accepts geojson but echarts team invented UTF8-encoded geojson format. UTF8-encoding is a loss compression with its precision adjustable. So far, it is only used in echarts. Similarly Topojson is created and advocated by the king of visualization, Mike Bostock . Both exists to solve the same problem: to reduce the size of fat geojson. In the internet era, the user experience is ruled by response time. The less the payload, the faster the rendering speed. For example \uff0cthe standard 2017 uk voting map is 188 MB but after UTF8-encoding, the resulting size is 9.9 MB, 1:20 compression ratio. UTF decode geojson As afore-mentioned, UTF8 encoded geojson can only be used with echarts. Hence, the decoding facility is required to get standard geojson and echarts-mapmaker provides such a facility. Please note: the encoding process is loss comporession Simple map authoring: merge and split mapmaker can merge a geojson feature into another geojson and can split all features of a geojson file into independent ones.","title":"echarts-mapmaker"},{"location":"tools/mapmaker/#mapmaker","text":"","title":"mapmaker"},{"location":"tools/mapmaker/#introduction","text":"echarts-mapmaker is derived from echarts-map-tool \u3002mapmaker targets at echarts map developers, whereas echarts-map-tool is web-ui for downloading custom geoshapes from Gaode map.","title":"Introduction"},{"location":"tools/mapmaker/#installation","text":"npm install -g echarts-mapmaker","title":"Installation"},{"location":"tools/mapmaker/#feature-highlights","text":"","title":"Feature highlights"},{"location":"tools/mapmaker/#utf-encode-geojson","text":"echarts accepts geojson but echarts team invented UTF8-encoded geojson format. UTF8-encoding is a loss compression with its precision adjustable. So far, it is only used in echarts. Similarly Topojson is created and advocated by the king of visualization, Mike Bostock . Both exists to solve the same problem: to reduce the size of fat geojson. In the internet era, the user experience is ruled by response time. The less the payload, the faster the rendering speed. For example \uff0cthe standard 2017 uk voting map is 188 MB but after UTF8-encoding, the resulting size is 9.9 MB, 1:20 compression ratio.","title":"UTF encode geojson"},{"location":"tools/mapmaker/#utf-decode-geojson","text":"As afore-mentioned, UTF8 encoded geojson can only be used with echarts. Hence, the decoding facility is required to get standard geojson and echarts-mapmaker provides such a facility. Please note: the encoding process is loss comporession","title":"UTF decode geojson"},{"location":"tools/mapmaker/#simple-map-authoring-merge-and-split","text":"mapmaker can merge a geojson feature into another geojson and can split all features of a geojson file into independent ones.","title":"Simple map authoring: merge and split"},{"location":"tools/mapshaper/","text":"mapshaper Introduction mapshaper is written by Matthew Bloch using node.js. It can edit Shapefile, GeoJSON, TopoJSON, CSV etc. With echarts map editing process, it is mainly used to wipe out internal borders. Installation npm install -g mapshaper The most important command for echarts map editing mapshaper your_shape_with_internal_borders.geojson -dissolve2 -o your_shape_contoure.geojson","title":"mapshaper"},{"location":"tools/mapshaper/#mapshaper","text":"","title":"mapshaper"},{"location":"tools/mapshaper/#introduction","text":"mapshaper is written by Matthew Bloch using node.js. It can edit Shapefile, GeoJSON, TopoJSON, CSV etc. With echarts map editing process, it is mainly used to wipe out internal borders.","title":"Introduction"},{"location":"tools/mapshaper/#installation","text":"npm install -g mapshaper","title":"Installation"},{"location":"tools/mapshaper/#the-most-important-command-for-echarts-map-editing","text":"mapshaper your_shape_with_internal_borders.geojson -dissolve2 -o your_shape_contoure.geojson","title":"The most important command for echarts map editing"}]}